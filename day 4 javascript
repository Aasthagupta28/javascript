1)Splice:
The splice() method adds and/or removes array elements.
Example:
let a=[1,2,3,4,5,6,7,8];

console.log(a.splice(1,4));

2)Reverse:
The reverse() method reverses an array and returns the reference to the same array, the first array element now becoming the last, and the last array element becoming the first.
Example:
const numbers = [1,2,3,4,5];

numbers.reverse(); 
console.log(numbers);

3)Join:
The join() method creates and returns a new string by concatenating all of the elements in an array (or an array-like object), separated by commas or a specified separator string. If the array has only one item, then that item will be returned without using the separator.
Example:
const numbers = ['city', 'country', 'place'];
const result = numbers.join(",");
console.log(result);

4)Split:
The split() function splits a string into an array and return new array.
Example:
let word = "What are you doing?";
let arr= word.split(" ");
console.log(arr);

5) Join and Split:
Example:
let page = "java script";
const arr = page.split(" ");
const result = arr.join('-')
console.log(result)

6)Index of():
The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.
Example 1:
const numbers = [1,2,3,4,5];
const index = numbers.indexOf(2);  
console.log(index);

Example 2:
const numbers = [1,2,3,4,5];
const index = numbers.indexOf(-1);  
console.log(index);



7)Adding two Arrays: 
Using concatenation:
const arr1 = [4,5,6];
const arr2 = [7,8,9];
const result = arr1.concat(arr2);
console.log(result);

Using Spread operator:
const arr1 = [4,5,6];
const arr2 = [7,8,9];
console.log([...arr1,...arr2]);

8)String and its methods:
const str = 'JavaScript is a scripting language';
// console.log(str);
// console.log(str.length);
// console.log(str[0]);
// console.log(str.includes('scripting'));
// console.log(str.indexOf('is'))
// console.log(str.toUpperCase());
// console.log(str.toLowerCase());
// console.log(str.trim()) //remove spaces from left and right
// console.log(str.trimLeft());
// console.log(str.trimRight());
// console.log(str.split(" "));
//  console.log(str.replace('scripting', 'programing'));
//  console.log(str.startsWith('Java'));


9)Arrow Function:
let show = (fname, lname) => {
    console.log(`Hi ${fname} ${lname}`);
}
show('amit', 'kumar');

10)High Order Function:
forEach():-  
let arr = [4,8,12,16];
let result = arr.forEach(function(value,index)
{
    return arr[index] = value*2;
});
console.log(arr);

 Using arrow function
 let arr = [4,8,12,16];
 let result = arr.forEach((value,index) => arr[index] = value*2);
 console.log(arr);


map():- 
let number = [2,6,4,9,1,10];
 let result = number.map(function(element)
 {
 return element -1;
 });
 console.log(result);
  
  
  Using arrow function
 let number = [2,6,4,9,1,10];
  let result = number.map((element) => element -1);
 console.log(result);

filter() 
let arr = [1,2,3,4,5];
 const result = arr.filter(function(value)
 {
     return value >2; 
 });
 console.log(result);

  Using arrow function
 let arr = [1,2,3,4,5];
  const result = arr.filter((value) => value>2);
 console.log(result);

reduce ():-
 const val = [3,4,5,6,7];
 const result = val.reduce(function(sum,i){
     return sum + i
},0);
console.log(result);
Using arrow function
 const val = [3,4,5,6,7];
  const result = val.reduce((sum,i) => sum+i);
  console.log(result);

11)Anonymous function:
It is a function that does not have any name associated with it. Normally we use the function keyword before the function name to define a function in JavaScript, however, in anonymous functions we use only the function keyword without the function name.
Example:

let result = function(){
    console.log('hello');
};

result();

12) IIFE(Immediately Invoked Function Expression:
It is a JavaScript function that runs as soon as it defined.
Example:
let result = (function(a, b){
    console.log('Apple', a + b);
})(2,3);
